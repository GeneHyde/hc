/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ParameterSelection;

import DataObjects.Sailplane;
import java.awt.Color;
import javax.swing.DefaultListModel;

/**
 *
 * @author garreola-gutierrez
 */
public class SailplaneSelection extends javax.swing.JPanel {

    /**
     * Creates new form SailplaneSelection
     */
    // Mdl that is first displayed
    DefaultListModel<Sailplane> mdl = new DefaultListModel();
    
    // Array list of Sailplane objects
    Sailplane [] gliderNewList = new Sailplane[3];
    public SailplaneSelection() {
        initComponents();
        
        // For loop to create airfield objects
        for(int i = 0; i < gliderNewList.length; i++){
            gliderNewList[i] = new Sailplane();
            gliderNewList[i].setNumber("number"+ i);
            gliderNewList[i].setType("type" +i);
            gliderNewList[i].setOwner("owner" + i);
            gliderNewList[i].setContactInformation("contact"+i);
            gliderNewList[i].setMaximumGrossWeight(i);
            gliderNewList[i].setEmptyWeight(i);
            gliderNewList[i].setIndicatedStallSpeed(i);
            gliderNewList[i].setMaximumWinchingSpeed(i);
            gliderNewList[i].setMaximumAllowableWeakLinkStrength(i);
            gliderNewList[i].setMaximumTension(i);
           
            // Adds new created objects to defaultListModel
            mdl.addElement(gliderNewList[i]);
        }
        // Sets defaultListModel to be the model for jlist 
        sailplaneJList.setModel(mdl);
       
        // Make textfields uneditable
        nNumberTextField.setEditable(false);
        maximumGrossWeightTextField.setEditable(false);
        maximumTensionTextField.setEditable(false);
        maximumAllowableWeakLinkStrengthTextField.setEditable(false);
        emptyWeightTextField.setEditable(false);
        typeTextField.setEditable(false);
        indicatedStallSpeedTextField.setEditable(false);
        maximumWinchingSpeedTextField.setEditable(false);
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        choice3 = new java.awt.Choice();
        jMenuItem1 = new javax.swing.JMenuItem();
        popupMenu1 = new java.awt.PopupMenu();
        gliderInputLabel = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        sailplaneJList = new javax.swing.JList();
        nNumberTextField = new javax.swing.JTextField();
        typeTextField = new javax.swing.JTextField();
        indicatedStallSpeedTextField = new javax.swing.JTextField();
        maximumGrossWeightTextField = new javax.swing.JTextField();
        emptyWeightTextField = new javax.swing.JTextField();
        maximumWinchingSpeedTextField = new javax.swing.JTextField();
        maximumTensionTextField = new javax.swing.JTextField();
        maximumAllowableWeakLinkStrengthTextField = new javax.swing.JTextField();
        ballastOnboardTextField = new javax.swing.JTextField();
        passengersWeightTextField = new javax.swing.JTextField();
        maximumGrossWeightLabel = new javax.swing.JLabel();
        nNumberLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        maximumGrossWeightLabel1 = new javax.swing.JLabel();
        maximumWinchingSpeedLabel = new javax.swing.JLabel();
        maximumTensionLabel = new javax.swing.JLabel();
        maximumAllowableWeakLinkStrengthLabel = new javax.swing.JLabel();
        indicatedStallSpeed = new javax.swing.JLabel();
        sailplaneInputTextField = new javax.swing.JTextField();
        ballastOnboardLabel = new javax.swing.JLabel();
        passengersWeightLabel = new javax.swing.JLabel();

        textField1.setText("textField1");

        jMenuItem1.setText("jMenuItem1");

        popupMenu1.setLabel("popupMenu1");

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gliderInputLabel.setText("Plane N-Number :");
        add(gliderInputLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 10, -1, -1));

        sailplaneJList.setModel(mdl);
        sailplaneJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sailplaneJListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sailplaneJList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, 398, 60));

        nNumberTextField.setEditable(false);
        nNumberTextField.setBackground(new java.awt.Color(255, 0, 0));
        add(nNumberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 112, 100, -1));

        typeTextField.setEditable(false);
        typeTextField.setBackground(new java.awt.Color(255, 0, 0));
        typeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTextFieldActionPerformed(evt);
            }
        });
        add(typeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 151, 100, -1));

        indicatedStallSpeedTextField.setEditable(false);
        indicatedStallSpeedTextField.setBackground(new java.awt.Color(255, 0, 0));
        add(indicatedStallSpeedTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 188, 100, -1));

        maximumGrossWeightTextField.setEditable(false);
        maximumGrossWeightTextField.setBackground(new java.awt.Color(255, 0, 0));
        maximumGrossWeightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximumGrossWeightTextFieldActionPerformed(evt);
            }
        });
        add(maximumGrossWeightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 188, 100, -1));

        emptyWeightTextField.setEditable(false);
        emptyWeightTextField.setBackground(new java.awt.Color(255, 0, 0));
        emptyWeightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyWeightTextFieldActionPerformed(evt);
            }
        });
        add(emptyWeightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 230, 100, -1));

        maximumWinchingSpeedTextField.setEditable(false);
        maximumWinchingSpeedTextField.setBackground(new java.awt.Color(255, 0, 0));
        maximumWinchingSpeedTextField.setText(" ");
        add(maximumWinchingSpeedTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 264, 100, -1));

        maximumTensionTextField.setEditable(false);
        maximumTensionTextField.setBackground(new java.awt.Color(255, 0, 0));
        maximumTensionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximumTensionTextFieldActionPerformed(evt);
            }
        });
        add(maximumTensionTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 112, 100, -1));

        maximumAllowableWeakLinkStrengthTextField.setEditable(false);
        maximumAllowableWeakLinkStrengthTextField.setBackground(new java.awt.Color(255, 0, 0));
        add(maximumAllowableWeakLinkStrengthTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 151, 100, -1));

        ballastOnboardTextField.setEditable(false);
        ballastOnboardTextField.setBackground(new java.awt.Color(255, 255, 51));
        ballastOnboardTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ballastOnboardTextFieldKeyReleased(evt);
            }
        });
        add(ballastOnboardTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 230, 100, -1));

        passengersWeightTextField.setEditable(false);
        passengersWeightTextField.setBackground(new java.awt.Color(255, 255, 51));
        passengersWeightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengersWeightTextFieldActionPerformed(evt);
            }
        });
        passengersWeightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passengersWeightTextFieldKeyReleased(evt);
            }
        });
        add(passengersWeightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 264, 100, -1));

        maximumGrossWeightLabel.setText("Empty Weight");
        add(maximumGrossWeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 233, -1, -1));

        nNumberLabel.setText("N-Number");
        add(nNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 115, 67, -1));

        typeLabel.setText("Type");
        add(typeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 154, 63, -1));

        maximumGrossWeightLabel1.setText("<html>Max Gross <br/>Weight<html>");
        add(maximumGrossWeightLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 191, 67, -1));

        maximumWinchingSpeedLabel.setText("<html>Max Winching <br/>Speed</html>");
        add(maximumWinchingSpeedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 256, 67, -1));

        maximumTensionLabel.setText("<html>Maximum <br/>Tension</html>");
        add(maximumTensionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 115, -1, -1));

        maximumAllowableWeakLinkStrengthLabel.setText("<html>Max Weak <br/>  Link Strenght</html>");
        add(maximumAllowableWeakLinkStrengthLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 154, -1, -1));

        indicatedStallSpeed.setText("<html>Indicated <br/>Stall Speed</html>");
        add(indicatedStallSpeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 191, -1, -1));

        sailplaneInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sailplaneInputTextFieldKeyReleased(evt);
            }
        });
        add(sailplaneInputTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 10, 274, -1));

        ballastOnboardLabel.setText("Ballast");
        add(ballastOnboardLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 233, -1, -1));

        passengersWeightLabel.setText("<html>Total <br/>Passenger <br/>Weight</html>");
        add(passengersWeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 256, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void sailplaneJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sailplaneJListMouseClicked
        // TODO add your handling code here:
         try {
            // do stuff
            // Gets the object is that selected when the button is pushed
            // fills the parts of the object to the right jtextfields
            if(mdl.getSize() > 0){
                Sailplane value = (Sailplane) sailplaneJList.getSelectedValue();
                nNumberTextField.setText(value.getNumber());
                typeTextField.setText(value.getType());
                maximumGrossWeightTextField.setText(String.valueOf(value.getMaximumGrossWeight()));
                emptyWeightTextField.setText(String.valueOf(value.getEmptyWeight()));
                maximumWinchingSpeedTextField.setText(String.valueOf(value.getMaximumWinchingSpeed()));
                maximumTensionTextField.setText(String.valueOf(value.getMaximumTension()));
                maximumAllowableWeakLinkStrengthTextField.setText(String.valueOf(value.getMaximumAllowableWeakLinkStrength()));
                indicatedStallSpeedTextField.setText(String.valueOf(value.getIndicatedStallSpeed()));
            }
                
            // Checks if jTextfields are empty and changes background 
            // of jtextfield if filled
            if(!(nNumberTextField.getText().equals(""))){
                nNumberTextField.setBackground(Color.GREEN);       
            }

            if(!(typeTextField.getText().equals(""))){
                typeTextField.setBackground(Color.GREEN);  
            }
            if(!(indicatedStallSpeedTextField.getText().equals(""))){
                indicatedStallSpeedTextField.setBackground(Color.GREEN);
            }

            if(!(maximumGrossWeightTextField.getText().equals(""))){
                maximumGrossWeightTextField.setBackground(Color.GREEN);       
            }
            if(!(emptyWeightTextField.getText().equals(""))){
                emptyWeightTextField.setBackground(Color.GREEN); 
            }
            if(!(maximumWinchingSpeedTextField.getText().equals(""))){
                maximumWinchingSpeedTextField.setBackground(Color.GREEN);
            }
            if(!(maximumTensionTextField.getText().equals(""))){
                maximumTensionTextField.setBackground(Color.GREEN);
            }
            if(!(maximumAllowableWeakLinkStrengthTextField.getText().equals(""))){
                maximumAllowableWeakLinkStrengthTextField.setBackground(Color.GREEN);
         
            }
            
            passengersWeightTextField.setEditable(true);
            ballastOnboardTextField.setEditable(true);
        }
        catch (Exception e) {
            //TODO add logic for what 
        }
    }//GEN-LAST:event_sailplaneJListMouseClicked

    private void passengersWeightTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passengersWeightTextFieldKeyReleased
        // TODO add your handling code here:
        try{
            int numPassengers = Integer.parseInt(passengersWeightTextField.getText());
            if(numPassengers > 0) {
                passengersWeightLabel.setVisible(true);
                passengersWeightTextField.setVisible(true);
                passengersWeightTextField.setBackground(Color.GREEN);
            }
            passengersWeightTextField.setBackground(Color.GREEN);
        }catch(NumberFormatException e) {
            passengersWeightTextField.setBackground(Color.RED);
            passengersWeightLabel.setVisible(false);
            passengersWeightTextField.setVisible(false);
        }
    }//GEN-LAST:event_passengersWeightTextFieldKeyReleased

    private void ballastOnboardTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ballastOnboardTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            int passengersWeight = Integer.parseInt(ballastOnboardTextField.getText());
            ballastOnboardTextField.setBackground(Color.GREEN);
        }catch(NumberFormatException e) {
            ballastOnboardTextField.setBackground(Color.YELLOW);
        }
    }//GEN-LAST:event_ballastOnboardTextFieldKeyReleased

    private void sailplaneInputTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sailplaneInputTextFieldKeyReleased
        // TODO add your handling code here:
        String matchString = sailplaneInputTextField.getText();
        DefaultListModel<Sailplane> tempModel = new DefaultListModel<>();
        
        for(Sailplane s : gliderNewList) {
            if(s.getNumber().startsWith(matchString))
                tempModel.addElement(s);
        }
        
        sailplaneJList.setModel(tempModel);
    }//GEN-LAST:event_sailplaneInputTextFieldKeyReleased

    private void typeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTextFieldActionPerformed

    private void maximumGrossWeightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maximumGrossWeightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maximumGrossWeightTextFieldActionPerformed

    private void emptyWeightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyWeightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emptyWeightTextFieldActionPerformed

    private void passengersWeightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengersWeightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengersWeightTextFieldActionPerformed

    private void maximumTensionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maximumTensionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maximumTensionTextFieldActionPerformed

public Sailplane getSelectedPlane() {
    if(sailplaneJList.getSelectedIndex() >= 0)
        return gliderNewList[sailplaneJList.getSelectedIndex()];
    return null;
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ballastOnboardLabel;
    private javax.swing.JTextField ballastOnboardTextField;
    private java.awt.Choice choice3;
    private javax.swing.JTextField emptyWeightTextField;
    private java.awt.Label gliderInputLabel;
    private javax.swing.JLabel indicatedStallSpeed;
    private javax.swing.JTextField indicatedStallSpeedTextField;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maximumAllowableWeakLinkStrengthLabel;
    private javax.swing.JTextField maximumAllowableWeakLinkStrengthTextField;
    private javax.swing.JLabel maximumGrossWeightLabel;
    private javax.swing.JLabel maximumGrossWeightLabel1;
    private javax.swing.JTextField maximumGrossWeightTextField;
    private javax.swing.JLabel maximumTensionLabel;
    private javax.swing.JTextField maximumTensionTextField;
    private javax.swing.JLabel maximumWinchingSpeedLabel;
    private javax.swing.JTextField maximumWinchingSpeedTextField;
    private javax.swing.JLabel nNumberLabel;
    private javax.swing.JTextField nNumberTextField;
    private javax.swing.JLabel passengersWeightLabel;
    private javax.swing.JTextField passengersWeightTextField;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JTextField sailplaneInputTextField;
    private javax.swing.JList sailplaneJList;
    private java.awt.TextField textField1;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JTextField typeTextField;
    // End of variables declaration//GEN-END:variables
}
