/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ParameterSelection;

import DataObjects.Sailplane;
import java.awt.Color;
import javax.swing.DefaultListModel;

/**
 *
 * @author garreola-gutierrez
 */
public class SailplaneSelection extends javax.swing.JPanel {

    /**
     * Creates new form SailplaneSelection
     */
    // Mdl that is first displayed
    DefaultListModel<Sailplane> mdl = new DefaultListModel();
    
    // Array list of Sailplane objects
    Sailplane [] gliderNewList = new Sailplane[3];
    public SailplaneSelection() {
        initComponents();
        
        // For loop to create airfield objects
        for(int i = 0; i < gliderNewList.length; i++){
            gliderNewList[i] = new Sailplane();
            gliderNewList[i].setNumber("number"+ i);
            gliderNewList[i].setType("type" +i);
            gliderNewList[i].setOwner("owner" + i);
            gliderNewList[i].setContactInformation("contact"+i);
            gliderNewList[i].setMaximumGrossWeight("maximum gross" +i);
            gliderNewList[i].setEmptyWeight("empty wieght"+i);
            gliderNewList[i].setIndicatedStallSpeed("indicated stall speed"+i);
            gliderNewList[i].setMaximumWinchingSpeed("maximum winching speed" +i);
            gliderNewList[i].setMaximumAllowableWeakLinkStrength("maximum allowable" +i);
            gliderNewList[i].setMaximumTension("maximum tension"+i);
           
            // Adds new created objects to defaultListModel
            mdl.addElement(gliderNewList[i]);
        }
        // Sets defaultListModel to be the model for jlist 
        sailplaneJList.setModel(mdl);
       
        // Make textfields uneditable
        nNumberTextField.setEditable(false);
        ownerTextField.setEditable(false);
        contactInformationTextField.setEditable(false);
        maximumGrossWeightTextField.setEditable(false);
        maximumTensionTextField.setEditable(false);
        maximumAllowableWeakLinkStrengthTextField.setEditable(false);
        emptyWeightTextField.setEditable(false);
        typeTextField.setEditable(false);
        indicatedStallSpeedTextField.setEditable(false);
        maximumWinchingSpeedTextField.setEditable(false);
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        choice3 = new java.awt.Choice();
        jMenuItem1 = new javax.swing.JMenuItem();
        popupMenu1 = new java.awt.PopupMenu();
        gliderInputLabel = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        sailplaneJList = new javax.swing.JList();
        nNumberTextField = new javax.swing.JTextField();
        ownerTextField = new javax.swing.JTextField();
        typeTextField = new javax.swing.JTextField();
        indicatedStallSpeedTextField = new javax.swing.JTextField();
        contactInformationTextField = new javax.swing.JTextField();
        maximumGrossWeightTextField = new javax.swing.JTextField();
        emptyWeightTextField = new javax.swing.JTextField();
        maximumWinchingSpeedTextField = new javax.swing.JTextField();
        maximumTensionTextField = new javax.swing.JTextField();
        maximumAllowableWeakLinkStrengthTextField = new javax.swing.JTextField();
        passengersWeightTextField = new javax.swing.JTextField();
        ballastOnboardTextField = new javax.swing.JTextField();
        numberOfPassengrsTextField = new javax.swing.JTextField();
        maximumGrossWeightLabel = new javax.swing.JLabel();
        nNumberLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        contactInformationLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        maximumGrossWeightLabel1 = new javax.swing.JLabel();
        maximumWinchingSpeedLabel = new javax.swing.JLabel();
        maximumTensionLabel = new javax.swing.JLabel();
        maximumAllowableWeakLinkStrengthLabel = new javax.swing.JLabel();
        indicatedStallSpeed = new javax.swing.JLabel();
        passengersWeightLabel = new javax.swing.JLabel();
        numberOfPassengersLabel = new javax.swing.JLabel();
        sailplaneInputTextField = new javax.swing.JTextField();
        ballastOnboardLabel = new javax.swing.JLabel();

        textField1.setText("textField1");

        jMenuItem1.setText("jMenuItem1");

        popupMenu1.setLabel("popupMenu1");

        gliderInputLabel.setText("Plane N-Number :");

        sailplaneJList.setModel(mdl);
        sailplaneJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sailplaneJListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sailplaneJList);

        nNumberTextField.setEditable(false);
        nNumberTextField.setBackground(new java.awt.Color(255, 0, 0));

        ownerTextField.setEditable(false);
        ownerTextField.setBackground(new java.awt.Color(255, 0, 0));

        typeTextField.setEditable(false);
        typeTextField.setBackground(new java.awt.Color(255, 0, 0));

        indicatedStallSpeedTextField.setEditable(false);
        indicatedStallSpeedTextField.setBackground(new java.awt.Color(255, 0, 0));

        contactInformationTextField.setEditable(false);
        contactInformationTextField.setBackground(new java.awt.Color(255, 0, 0));

        maximumGrossWeightTextField.setEditable(false);
        maximumGrossWeightTextField.setBackground(new java.awt.Color(255, 0, 0));

        emptyWeightTextField.setEditable(false);
        emptyWeightTextField.setBackground(new java.awt.Color(255, 0, 0));

        maximumWinchingSpeedTextField.setEditable(false);
        maximumWinchingSpeedTextField.setBackground(new java.awt.Color(255, 0, 0));
        maximumWinchingSpeedTextField.setText("\n");

        maximumTensionTextField.setEditable(false);
        maximumTensionTextField.setBackground(new java.awt.Color(255, 0, 0));

        maximumAllowableWeakLinkStrengthTextField.setEditable(false);
        maximumAllowableWeakLinkStrengthTextField.setBackground(new java.awt.Color(255, 0, 0));

        passengersWeightTextField.setBackground(new java.awt.Color(255, 0, 0));
        passengersWeightTextField.setVisible(false);
        passengersWeightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passengersWeightTextFieldKeyReleased(evt);
            }
        });

        ballastOnboardTextField.setEditable(false);
        ballastOnboardTextField.setBackground(new java.awt.Color(255, 255, 51));
        ballastOnboardTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ballastOnboardTextFieldKeyReleased(evt);
            }
        });

        numberOfPassengrsTextField.setEditable(false);
        numberOfPassengrsTextField.setBackground(new java.awt.Color(255, 255, 51));
        numberOfPassengrsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberOfPassengrsTextFieldKeyReleased(evt);
            }
        });

        maximumGrossWeightLabel.setText("Empty Weight");

        nNumberLabel.setText("N-Number");

        typeLabel.setText("Type");

        contactInformationLabel.setText("Owner");

        jLabel6.setText("<html>Contact <br/> Information</html>");

        maximumGrossWeightLabel1.setText("<html>Maximum <br/>Gross Weight<html>");

        maximumWinchingSpeedLabel.setText("<html>Max Winching <br/>Speed</html>");

        maximumTensionLabel.setText("<html>Maximum <br/>Tension</html>");

        maximumAllowableWeakLinkStrengthLabel.setText("<html>Maximum Allowable <br/>Weak Link Strenght</html>");

        indicatedStallSpeed.setText("<html>Indicated <br/>Stall Speed</html>");

        passengersWeightLabel.setText("<html>Passenger(s) <br/>Weight(s)<html>");
        passengersWeightLabel.setVisible(false);
        passengersWeightLabel.setVerifyInputWhenFocusTarget(false);

        numberOfPassengersLabel.setText("<html>Number of <br/> Passenger(s)</html>");

        sailplaneInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sailplaneInputTextFieldKeyReleased(evt);
            }
        });

        ballastOnboardLabel.setText("Ballast");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gliderInputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(sailplaneInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nNumberLabel)
                        .addGap(42, 42, 42)
                        .addComponent(nNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(maximumTensionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(maximumTensionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeLabel)
                            .addComponent(contactInformationLabel))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ownerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(maximumAllowableWeakLinkStrengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(maximumAllowableWeakLinkStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(contactInformationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(indicatedStallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(indicatedStallSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maximumGrossWeightLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maximumGrossWeightLabel))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maximumGrossWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emptyWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ballastOnboardLabel)
                            .addComponent(numberOfPassengersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ballastOnboardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfPassengrsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maximumWinchingSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(maximumWinchingSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(passengersWeightLabel)
                        .addGap(54, 54, 54)
                        .addComponent(passengersWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gliderInputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sailplaneInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nNumberLabel)
                    .addComponent(nNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maximumTensionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maximumTensionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(typeLabel)
                        .addGap(16, 16, 16)
                        .addComponent(contactInformationLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(typeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(ownerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maximumAllowableWeakLinkStrengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maximumAllowableWeakLinkStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(indicatedStallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indicatedStallSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactInformationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ballastOnboardLabel)
                        .addGap(16, 16, 16)
                        .addComponent(numberOfPassengersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ballastOnboardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(numberOfPassengrsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maximumGrossWeightLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(maximumGrossWeightLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maximumGrossWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(emptyWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maximumWinchingSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maximumWinchingSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passengersWeightLabel)
                    .addComponent(passengersWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sailplaneJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sailplaneJListMouseClicked
        // TODO add your handling code here:
         try {
            // do stuff
            // Gets the object is that selected when the button is pushed
            // fills the parts of the object to the right jtextfields
            if(mdl.getSize() > 0){
                Sailplane value = (Sailplane) sailplaneJList.getSelectedValue();
                nNumberTextField.setText(value.getNumber());
                typeTextField.setText(value.getType());
                ownerTextField.setText(value.getOwner());
                contactInformationTextField.setText(value.getContactInformation());
                maximumGrossWeightTextField.setText(value.getMaximumGrossWeight());
                emptyWeightTextField.setText(value.getEmptyWeight());
                maximumWinchingSpeedTextField.setText(value.getMaximumWinchingSpeed());
                maximumTensionTextField.setText(value.getMaximumTension());
                maximumAllowableWeakLinkStrengthTextField.setText(value.getMaximumAllowableWeakLinkStrength());
                indicatedStallSpeedTextField.setText(value.getIndicatedStallSpeed());
            }
                
            // Checks if jTextfields are empty and changes background 
            // of jtextfield if filled
            if(!(nNumberTextField.getText().equals(""))){
                nNumberTextField.setBackground(Color.GREEN);       
            }
            if(!(ownerTextField.getText().equals(""))){
                ownerTextField.setBackground(Color.GREEN); 
            }
            if(!(typeTextField.getText().equals(""))){
                typeTextField.setBackground(Color.GREEN);  
            }
            if(!(indicatedStallSpeedTextField.getText().equals(""))){
                indicatedStallSpeedTextField.setBackground(Color.GREEN);
            }
            if(!(contactInformationTextField.getText().equals(""))){
                contactInformationTextField.setBackground(Color.GREEN);
            }
            if(!(maximumGrossWeightTextField.getText().equals(""))){
                maximumGrossWeightTextField.setBackground(Color.GREEN);       
            }
            if(!(emptyWeightTextField.getText().equals(""))){
                emptyWeightTextField.setBackground(Color.GREEN); 
            }
            if(!(maximumWinchingSpeedTextField.getText().equals(""))){
                maximumWinchingSpeedTextField.setBackground(Color.GREEN);
            }
            if(!(maximumTensionTextField.getText().equals(""))){
                maximumTensionTextField.setBackground(Color.GREEN);
            }
            if(!(maximumAllowableWeakLinkStrengthTextField.getText().equals(""))){
                maximumAllowableWeakLinkStrengthTextField.setBackground(Color.GREEN);
         
            }
            
            numberOfPassengrsTextField.setEditable(true);
            ballastOnboardTextField.setEditable(true);
        }
        catch (Exception e) {
            //TODO add logic for what 
        }
    }//GEN-LAST:event_sailplaneJListMouseClicked

    private void numberOfPassengrsTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfPassengrsTextFieldKeyReleased
        // TODO add your handling code here:
        try{
            int numPassengers = Integer.parseInt(numberOfPassengrsTextField.getText());
            if(numPassengers > 0) {
                passengersWeightLabel.setVisible(true);
                passengersWeightTextField.setVisible(true);
                numberOfPassengrsTextField.setBackground(Color.GREEN);
            }
            numberOfPassengrsTextField.setBackground(Color.GREEN);
        }catch(NumberFormatException e) {
            numberOfPassengrsTextField.setBackground(Color.RED);
            passengersWeightLabel.setVisible(false);
            passengersWeightTextField.setVisible(false);
        }
    }//GEN-LAST:event_numberOfPassengrsTextFieldKeyReleased

    private void passengersWeightTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passengersWeightTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            int passengersWeight = Integer.parseInt(passengersWeightTextField.getText());
            passengersWeightTextField.setBackground(Color.GREEN);
        }catch(NumberFormatException e) {
            passengersWeightTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_passengersWeightTextFieldKeyReleased

    private void ballastOnboardTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ballastOnboardTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            int passengersWeight = Integer.parseInt(ballastOnboardTextField.getText());
            ballastOnboardTextField.setBackground(Color.GREEN);
        }catch(NumberFormatException e) {
            ballastOnboardTextField.setBackground(Color.YELLOW);
        }
    }//GEN-LAST:event_ballastOnboardTextFieldKeyReleased

    private void sailplaneInputTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sailplaneInputTextFieldKeyReleased
        // TODO add your handling code here:
        String matchString = sailplaneInputTextField.getText();
        DefaultListModel<Sailplane> tempModel = new DefaultListModel<>();
        
        for(Sailplane s : gliderNewList) {
            if(s.getNumber().startsWith(matchString))
                tempModel.addElement(s);
        }
        
        sailplaneJList.setModel(tempModel);
    }//GEN-LAST:event_sailplaneInputTextFieldKeyReleased

public Sailplane getSelectedPlane() {
    if(sailplaneJList.getSelectedIndex() >= 0)
        return gliderNewList[sailplaneJList.getSelectedIndex()];
    return null;
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ballastOnboardLabel;
    private javax.swing.JTextField ballastOnboardTextField;
    private java.awt.Choice choice3;
    private javax.swing.JLabel contactInformationLabel;
    private javax.swing.JTextField contactInformationTextField;
    private javax.swing.JTextField emptyWeightTextField;
    private java.awt.Label gliderInputLabel;
    private javax.swing.JLabel indicatedStallSpeed;
    private javax.swing.JTextField indicatedStallSpeedTextField;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maximumAllowableWeakLinkStrengthLabel;
    private javax.swing.JTextField maximumAllowableWeakLinkStrengthTextField;
    private javax.swing.JLabel maximumGrossWeightLabel;
    private javax.swing.JLabel maximumGrossWeightLabel1;
    private javax.swing.JTextField maximumGrossWeightTextField;
    private javax.swing.JLabel maximumTensionLabel;
    private javax.swing.JTextField maximumTensionTextField;
    private javax.swing.JLabel maximumWinchingSpeedLabel;
    private javax.swing.JTextField maximumWinchingSpeedTextField;
    private javax.swing.JLabel nNumberLabel;
    private javax.swing.JTextField nNumberTextField;
    private javax.swing.JLabel numberOfPassengersLabel;
    private javax.swing.JTextField numberOfPassengrsTextField;
    private javax.swing.JTextField ownerTextField;
    private javax.swing.JLabel passengersWeightLabel;
    private javax.swing.JTextField passengersWeightTextField;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JTextField sailplaneInputTextField;
    private javax.swing.JList sailplaneJList;
    private java.awt.TextField textField1;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JTextField typeTextField;
    // End of variables declaration//GEN-END:variables
}
