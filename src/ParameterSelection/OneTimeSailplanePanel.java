/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ParameterSelection;

import DataObjects.Sailplane;
import java.awt.Color;
import javax.swing.JOptionPane;
import DatabaseUtilities.DatabaseDataObjectUtilities;
import Configuration.UnitLabelUtilities;
import DatabaseUtilities.DatabaseUnitSelectionUtilities;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

//DatabaseUnitSelectionUtilities units = new DatabaseUnitSelectionUtilities();
//UnitLabelUtilities unitsLabel = new UnitLabelUtilities();

/**
 *
 * @author awilliams5
 */
public class OneTimeSailplanePanel extends javax.swing.JPanel {
    
    /**
     * Creates new form OneTimeSailplanePanel
     */
    public OneTimeSailplanePanel() {
        initComponents();
        PassengerWeight.setEditable(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        DatabaseUnitSelectionUtilities units = new DatabaseUnitSelectionUtilities();
        UnitLabelUtilities unitsLabel = new UnitLabelUtilities();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MaximumGrossWeight = new javax.swing.JTextField();
        Type = new javax.swing.JTextField();
        maximumGrossWeightLabel1 = new javax.swing.JLabel();
        NNumber = new javax.swing.JTextField();
        maximumGrossWeightLabel = new javax.swing.JLabel();
        EmptyWeight = new javax.swing.JTextField();
        maximumWinchingSpeedLabel = new javax.swing.JLabel();
        MaxWinchingSpeed = new javax.swing.JTextField();
        maximumTensionLabel = new javax.swing.JLabel();
        maximumAllowableWeakLinkStrengthLabel = new javax.swing.JLabel();
        indicatedStallSpeed = new javax.swing.JLabel();
        ballastOnboardLabel = new javax.swing.JLabel();
        MaximumAllowableWeakLinkStrength = new javax.swing.JTextField();
        YesRadioButton = new javax.swing.JRadioButton();
        passengersWeightLabel = new javax.swing.JLabel();
        PassengerWeight = new javax.swing.JTextField();
        MaximumTension = new javax.swing.JTextField();
        StallSpeed = new javax.swing.JTextField();
        maxGrossWeightUnit = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        
        jLabel1.setText("N-Number:");
        
        jLabel2.setText("Type:");
        
        MaximumGrossWeight.setBackground(new Color(255, 105, 105));
        MaximumGrossWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaximumGrossWeightKeyReleased(evt);
            }
        });
        
        Type.setBackground(new Color(255, 105, 105));
        Type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TypeKeyReleased(evt);
            }
        });
        
        maximumGrossWeightLabel1.setText("<html>Maximum <br/>Gross Weight<html>");
        
        NNumber.setBackground(new Color(255, 105, 105));
        NNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NNumberKeyReleased(evt);
            }
        });
        
        maximumGrossWeightLabel.setText("Empty Weight");
        
        EmptyWeight.setBackground(new Color(255, 105, 105));
        EmptyWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmptyWeightKeyReleased(evt);
            }
        });
        
        maximumWinchingSpeedLabel.setText("<html>Max Winching <br/>Speed</html>");
        
        MaxWinchingSpeed.setBackground(new Color(255, 105, 105));
        MaxWinchingSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaxWinchingSpeedKeyReleased(evt);
            }
        });
        
        maximumTensionLabel.setText("<html>Maximum <br/>Tension</html>");
        
        maximumAllowableWeakLinkStrengthLabel.setText("<html>Maximum <br/>Allowable <br/>Weak Link <br/>Strenght</html>");
        
        indicatedStallSpeed.setText("<html>Indicated <br/>Stall Speed</html>");
        
        ballastOnboardLabel.setText("Does it have ballast?");
        
        MaximumAllowableWeakLinkStrength.setBackground(new Color(255, 105, 105));
        MaximumAllowableWeakLinkStrength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaximumAllowableWeakLinkStrengthKeyReleased(evt);
            }
        });
        
        YesRadioButton.setText("Yes");
        
        passengersWeightLabel.setText("<html>Indicated <br/>Passenger Weight</html>");
        
        PassengerWeight.setBackground(new Color(255, 105, 105));
        PassengerWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PassengerWeightActionPerformed(evt);
            }
        });
        PassengerWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PassengerWeightKeyReleased(evt);
            }
        });
        
        MaximumTension.setBackground(new Color(255, 105, 105));
        MaximumTension.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MaximumTensionKeyReleased(evt);
            }
        });
        
        StallSpeed.setBackground(new Color(255, 105, 105));
        StallSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StallSpeedKeyReleased(evt);
            }
        });
        try {
            maxGrossWeightUnit.setText(unitsLabel.weightUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneWeightUnit()));
            jLabel5.setText(unitsLabel.tensionUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneTensionUnit()));
            jLabel6.setText(unitsLabel.weightUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneWeightUnit()));
            jLabel9.setText(unitsLabel.velocityUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneVelocityUnit()));
            jLabel10.setText(unitsLabel.tensionUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneTensionUnit()));
            jLabel11.setText(unitsLabel.weightUnitIndexToString(DatabaseUnitSelectionUtilities.getSailplaneWeightUnit()));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OneTimeSailplanePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                                  layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                  .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                      .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                          .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(jLabel1)
                                                                                    .addGap(30, 30, 30)
                                                                                    .addComponent(NNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                          .addGroup(layout.createSequentialGroup()
                                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                              .addComponent(maximumGrossWeightLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(maximumWinchingSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(maximumAllowableWeakLinkStrengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                              .addComponent(MaximumAllowableWeakLinkStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(MaxWinchingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(MaximumGrossWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                    .addComponent(maxGrossWeightUnit)
                                                                                    .addComponent(jLabel9))
                                                                          .addComponent(jLabel10))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                          .addGroup(layout.createSequentialGroup()
                                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                              .addComponent(jLabel2)
                                                                                              .addComponent(indicatedStallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                    .addGap(45, 45, 45)
                                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                              .addComponent(StallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(EmptyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                              .addComponent(MaximumTension, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                          .addComponent(maximumGrossWeightLabel)
                                                                          .addComponent(maximumTensionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                          .addComponent(jLabel6)
                                                                          .addComponent(jLabel5)))
                                                      .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                          .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(passengersWeightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addGap(18, 18, 18)
                                                                                    .addComponent(PassengerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                          .addGroup(layout.createSequentialGroup()
                                                                                    .addComponent(ballastOnboardLabel)
                                                                                    .addGap(34, 34, 34)
                                                                                    .addComponent(YesRadioButton)))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel11)))
                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                  );
        layout.setVerticalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                          .addGap(21, 21, 21)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel2)
                                                    .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(NNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(MaximumGrossWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(maximumGrossWeightLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(maximumWinchingSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                  .addComponent(MaxWinchingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                  .addComponent(jLabel9)))
                                                              .addGap(6, 6, 6)
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                  .addComponent(MaximumAllowableWeakLinkStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                  .addComponent(jLabel10))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                  .addGap(2, 2, 2)
                                                                                  .addComponent(StallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(maximumAllowableWeakLinkStrengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                  .addGap(40, 40, 40)
                                                                                  .addComponent(ballastOnboardLabel))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                  .addComponent(YesRadioButton)))
                                                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(passengersWeightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                  .addComponent(PassengerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                  .addComponent(jLabel11))))
                                                    .addGroup(layout.createSequentialGroup()
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(maximumGrossWeightLabel)
                                                                        .addComponent(EmptyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel6)
                                                                        .addComponent(maxGrossWeightUnit))
                                                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(maximumTensionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                  .addComponent(MaximumTension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                  .addComponent(jLabel5)))
                                                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                              .addComponent(indicatedStallSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                          .addContainerGap(35, Short.MAX_VALUE))
                                );
    }    
    public void setMaxGrossWeightUnit(JLabel maxGrossWeightUnit) {
        this.maxGrossWeightUnit = maxGrossWeightUnit;
    }
    
    private void MaximumGrossWeightKeyReleased(java.awt.event.KeyEvent evt) {
        if(MaximumGrossWeight.getText().isEmpty()){
            MaximumGrossWeight.setBackground(new Color(255, 105, 105));
        }
        else
            MaximumGrossWeight.setBackground(new Color(142, 250, 127));
    }
    
    private void TypeKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(Type.getText().isEmpty()){
            Type.setBackground(new Color(255, 105, 105));
        }
        else
            Type.setBackground(new Color(142, 250, 127));
    }
    
    private void NNumberKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(NNumber.getText().isEmpty()){
            NNumber.setBackground(new Color(255, 105, 105));
        }
        else
            NNumber.setBackground(new Color(142, 250, 127));
    }
    
    private void EmptyWeightKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(EmptyWeight.getText().isEmpty()) {
            EmptyWeight.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(EmptyWeight.getText());
                EmptyWeight.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                EmptyWeight.setBackground(new Color(255, 105, 105));
            }
        }
    }
    
    private void MaxWinchingSpeedKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(MaxWinchingSpeed.getText().isEmpty()) {
            MaxWinchingSpeed.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(MaxWinchingSpeed.getText());
                MaxWinchingSpeed.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                MaxWinchingSpeed.setBackground(new Color(255, 105, 105));
            }
        }
    }
    
    private void MaximumAllowableWeakLinkStrengthKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(MaximumAllowableWeakLinkStrength.getText().isEmpty()) {
            MaximumAllowableWeakLinkStrength.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(MaximumAllowableWeakLinkStrength.getText());
                MaximumAllowableWeakLinkStrength.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                MaximumAllowableWeakLinkStrength.setBackground(new Color(255, 105, 105));
            }
        }
        
    }
    
    private void PassengerWeightKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        if(PassengerWeight.getText().isEmpty()) {
            PassengerWeight.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(PassengerWeight.getText());
                PassengerWeight.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                PassengerWeight.setBackground(new Color(255, 105, 105));
            }
        }
    }
    
    private void PassengerWeightActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        if(YesRadioButton.isSelected()){
            PassengerWeight.setEditable(true);
        }
    }                                               
    
    private void MaximumTensionKeyReleased(java.awt.event.KeyEvent evt) {                                           
        // TODO add your handling code here:
        if(MaximumTension.getText().isEmpty()) {
            MaximumTension.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(MaximumTension.getText());
                MaximumTension.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                MaximumTension.setBackground(new Color(255, 105, 105));
            }
        }
    }                                          
    
    private void StallSpeedKeyReleased(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
        if(StallSpeed.getText().isEmpty()) {
            StallSpeed.setBackground(new Color(255, 105, 105));
        }
        else {
            try {
                Integer.parseInt(StallSpeed.getText());
                StallSpeed.setBackground(new Color(142, 250, 127));
            }catch (NumberFormatException e) {
                StallSpeed.setBackground(new Color(255, 105, 105));
            }
        }
    }                                      
    
    public Sailplane getOneTimeSailplnae() {
        if(NNumber.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a N-Number");
            return null;
        }
        String newNNumber = NNumber.getText();
        if(Type.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a last type");
            return null;
        }
        String newType = Type.getText();
        int grossWeight = 0;
        if(MaximumGrossWeight.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a maximum gross weight");
            return null;
        }
        else try{
            grossWeight = Integer.parseInt(MaximumGrossWeight.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VAILD maximum gross weight");
        }
        int emptyWeight = 0;
        if(EmptyWeight.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a empty weight");
            return null;
        }
        else try{
            emptyWeight = Integer.parseInt(EmptyWeight.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VAILD empty weight");
            return null;
        }
        int maxWinchingSpeed = 0;
        if(MaxWinchingSpeed.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a maximum wenching speed");
            return null;
        }
        else try{
            maxWinchingSpeed = Integer.parseInt(MaxWinchingSpeed.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VAILD maximum wenching speed");
            return null;
        }
        int maximumTension = 0;
        if(MaximumTension.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a maximum tension");
            return null;
        }
        else try{
            maximumTension= Integer.parseInt(MaximumTension.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VALID maximum tension");
            return null;
        }
        int weakLinkStrength = 0;
        if(MaximumAllowableWeakLinkStrength.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a maximum allowabel weak link strength");
            return null;
        }
        else try{
            weakLinkStrength= Integer.parseInt(MaximumAllowableWeakLinkStrength.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VALID maximum allowabel weak link strength");
            return null;
        }
        int stallSpeed= 0;
        if(StallSpeed.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide a indicated stall speed");
            return null;
        }
        else try{
            stallSpeed= Integer.parseInt(StallSpeed.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please provide a VALID indicated stall speed");
            return null;
        }
        boolean hasBallast= false;
        if(YesRadioButton.isSelected()){ 
            hasBallast = true;
        } 
        
        else {
            //TODO ???
        }
        
        return (new Sailplane(newNNumber, newType, grossWeight, emptyWeight, stallSpeed, maxWinchingSpeed,  weakLinkStrength, maximumTension, hasBallast, hasBallast));
        
    }
    // Variables declaration - do not modify                     
    private javax.swing.JTextField EmptyWeight;
    private javax.swing.JTextField MaxWinchingSpeed;
    private javax.swing.JTextField MaximumAllowableWeakLinkStrength;
    private javax.swing.JTextField MaximumGrossWeight;
    private javax.swing.JTextField MaximumTension;
    private javax.swing.JTextField NNumber;
    private javax.swing.JTextField PassengerWeight;
    private javax.swing.JTextField StallSpeed;
    private javax.swing.JTextField Type;
    private javax.swing.JRadioButton YesRadioButton;
    private javax.swing.JLabel ballastOnboardLabel;
    private javax.swing.JLabel indicatedStallSpeed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel maxGrossWeightUnit;
    private javax.swing.JLabel maximumAllowableWeakLinkStrengthLabel;
    private javax.swing.JLabel maximumGrossWeightLabel;
    private javax.swing.JLabel maximumGrossWeightLabel1;
    private javax.swing.JLabel maximumTensionLabel;
    private javax.swing.JLabel maximumWinchingSpeedLabel;
    private javax.swing.JLabel passengersWeightLabel;
    // End of variables declaration                   
}
